<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Dev.Poga</title>
    <link>https://devpoga.org/categories/notes/</link>
    <description>Recent content in Notes on Dev.Poga</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://devpoga.org/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Common Lisp Local Project Development with Quicklisp</title>
      <link>https://devpoga.org/post/2021-05-01_common_lisp_quicklisp_local_project/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2021-05-01_common_lisp_quicklisp_local_project/</guid>
      <description>Probably the cleanest way to do it:
(pushnew (truename &amp;#34;/projects/app/&amp;#34;) ql:*local-project-directories* ) (ql:register-local-projects) (ql:quickload :app) From Use Quicklisp to load personal projects from arbitrary locations.
 Alternatively, you can create a symlink in ~/quicklisp/local-projects/.</description>
    </item>
    
    <item>
      <title>The Common Lisp Condition System</title>
      <link>https://devpoga.org/post/2021-04-25_common_lisp_condition_system/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2021-04-25_common_lisp_condition_system/</guid>
      <description>Foundation of the Condition System Dynamic Variables A nested stack of environment variables. Defined with defvar, declare special, or defparameter.
 In Common Lisp, it is not necessary to instantiate or refer to any separate context object nor enclose the environment in an object, because contextual information is available by means of dynamic variables, which can be accessed and rebound as appropriate. New means of passing contextual information can be provided by defining new dynamic variables, and utilizing this new information channel does not require creating or altering any existing abstractions.</description>
    </item>
    
    <item>
      <title>Concurrency in Clojure, Racket, and Gerbil Scheme</title>
      <link>https://devpoga.org/post/2020-06-07-concurrency-clojure-racket-gerbil/</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2020-06-07-concurrency-clojure-racket-gerbil/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://devpoga.org/post/2020-06-07-concurrency-clojure-racket-gerbil/index.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On Communication</title>
      <link>https://devpoga.org/post/2020-04-21_on-communication/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2020-04-21_on-communication/</guid>
      <description>&lt;p&gt;Reading List.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Domain Modeling Made Functional</title>
      <link>https://devpoga.org/post/2020-04-10_domain-modeling-made-functional/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2020-04-10_domain-modeling-made-functional/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://devpoga.org/post/2020-04-10_domain-modeling-made-functional/book.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Notes on the book &lt;a href=&#34;https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven/dp/1680502549&#34;&gt;Domain Modeling Made Functional: Tackle Software Complexity with Domain-Driven Design and F#&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zero Trust Network</title>
      <link>https://devpoga.org/post/2020-04-09_zero-trust-network/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2020-04-09_zero-trust-network/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://devpoga.org/post/2020-04-09_zero-trust-network/book.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Notes on the book &lt;a href=&#34;https://www.amazon.com/Zero-Trust-Networks-Building-Untrusted/dp/1491962194&#34;&gt;Zero Trust Network&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OCaml Quickstart</title>
      <link>https://devpoga.org/post/2020-03-17_ocaml_quickstart/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2020-03-17_ocaml_quickstart/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://devpoga.org/post/2020-03-17_ocaml_quickstart/vim.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ocaml.org/&#34;&gt;OCaml&lt;/a&gt; is a great language. However, the tooling for newbies is kinda confusing. Here&amp;rsquo;s a guide to setup a working OCaml development environment in &lt;a href=&#34;https://neovim.io/&#34;&gt;neovim&lt;/a&gt; on MacOS.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Benchmarking VPS for Remote Rust Development Environment</title>
      <link>https://devpoga.org/post/2019-10-22-vps_rust_compile_benchmark/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2019-10-22-vps_rust_compile_benchmark/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://devpoga.org/post/2019-10-22-vps_rust_compile_benchmark/chart.png&#34;&gt;&lt;img src=&#34;https://devpoga.org/post/2019-10-22-vps_rust_compile_benchmark/chart.png&#34; width=&#34;100%&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ripgrep Cheat Sheet</title>
      <link>https://devpoga.org/post/2019-09-20_ripgrep_cheat_sheet/</link>
      <pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2019-09-20_ripgrep_cheat_sheet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Notes on The Signal Protocol</title>
      <link>https://devpoga.org/post/2019-09-04_notes_on_the_signal_protocol/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2019-09-04_notes_on_the_signal_protocol/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://devpoga.org/post/2019-09-04_notes_on_the_signal_protocol/dh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So, I assume you&amp;rsquo;re already familiar with &lt;a href=&#34;https://en.wikipedia.org/wiki/Public-key_cryptography&#34;&gt;Public-key cryptography&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange&#34;&gt;Diffie-Hellman key exchange&lt;/a&gt;. If not, there are lots of good materials about them. Check them out first!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Public-key cryptography is a solid, well-studied foundation for today&amp;rsquo;s modern encryption and privacy. PGP, Diffle-Hellman, and RSA are all well-known. However, if you want to develop something with encryption, they might be not enough.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>工程師的英文寫作能力</title>
      <link>https://devpoga.org/post/2019-06-29_%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E8%8B%B1%E6%96%87%E5%AF%AB%E4%BD%9C%E8%83%BD%E5%8A%9B/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2019-06-29_%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E8%8B%B1%E6%96%87%E5%AF%AB%E4%BD%9C%E8%83%BD%E5%8A%9B/</guid>
      <description>&lt;p&gt;寫作能力一直是工程師實力一個很重要的指標。&lt;/p&gt;
&lt;p&gt;能清楚的透過文字表達，在寫規格、文件時都很重要。在這個非同步的遠端工作時代，文字能力也幾乎直接代表了團隊合作的能力。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Notes on the Implementation of Lua 5.3</title>
      <link>https://devpoga.org/post/implementation-lua53/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://devpoga.org/post/implementation-lua53/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://poga.github.io/lua53-notes/&#34;&gt;Notes on the Implementation on Lua 5.3&lt;/a&gt; is a collection of my notes on the Lua 5.3 source code. It&amp;rsquo;s a mix of both high-level ideas and interesting details in the source code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Design of Everyday Things</title>
      <link>https://devpoga.org/post/2016-07-17_design-of-everyday-things/</link>
      <pubDate>Sun, 17 Jul 2016 06:02:04 +0000</pubDate>
      
      <guid>https://devpoga.org/post/2016-07-17_design-of-everyday-things/</guid>
      <description>&lt;p&gt;雜亂筆記&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
