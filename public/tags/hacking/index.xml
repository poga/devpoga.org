<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hacking on Dev.Poga</title>
    <link>https://devpoga.org/tags/hacking/</link>
    <description>Recent content in hacking on Dev.Poga</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Apr 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://devpoga.org/tags/hacking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dealing with Tech Debts</title>
      <link>https://devpoga.org/blog/2023-04-01_dealing_with_tech_debts/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0800</pubDate>
      
      <guid>https://devpoga.org/blog/2023-04-01_dealing_with_tech_debts/</guid>
      <description>Here&amp;rsquo;s the rough transcript of a talk I&amp;rsquo;ve given at my $DayJob.
On Dealing with Tech Debts Tech debts has been a sin of software engineers since the dawn of the computer. Today I will talk about concrete methods I&amp;rsquo;ve been using for many years. I will not talk about high-level ideas since we already have way too many on the internet.
So the method is simple: You want to constantly dealing with tech debts during your development process, not just after finished a task, not arranging a special sprint for debts.</description>
    </item>
    
    <item>
      <title>Hacking is a Lost Art</title>
      <link>https://devpoga.org/blog/2023-02-19_hacking_lost_art/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0800</pubDate>
      
      <guid>https://devpoga.org/blog/2023-02-19_hacking_lost_art/</guid>
      <description>What&amp;rsquo;s hacking?
It is the practice of aggressively refining the problem statement in order to identify find the problem that is actually worth solving.
It is the art of focusing on solving a problem in the most impactful and economical way possible while minimizing accidental complexity.
It is the art of not getting attached to a solution and iterating quickly.
It&amp;rsquo;s the art of having fun while doing it.</description>
    </item>
    
  </channel>
</rss>
